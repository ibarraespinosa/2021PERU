options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.width=9, fig.height=3.5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
library(xaringanthemer)
library(vein)
?Evaporative
?ef_evap
?emis_evap
?Evaporative
library(gtfs2gps)
?gtfs2gps
poa <- read_gtfs(system.file("extdata/poa.zip", package="gtfs2gps"))
subset <- filter_by_shape_id(poa, "T2-1") %>%
filter_single_trip()
library(xaringanthemer)
style_duo_accent_inverse(primary_color = "#035AA6", secondary_color = "#03A696")
library(ggplot2)
library(sf)
library(vein)
library(data.table)
library(gtfs2gps)
library(vein)
data("net")
plot(net["ldv"],  main ="Flujo leves [veh/h]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
poa <- read_gtfs(system.file("extdata/poa.zip", package="gtfs2gps"))
subset <- filter_by_shape_id(poa, "T2-1") %>%
filter_single_trip()
subset.
subset
subset <- filter_by_shape_id(poa, "T2-1") %>%
filter_single_trip() %>%
gtfs2gps()
subset
subset <- filter_by_shape_id(poa, "T2-1") %>%
filter_single_trip() %>%
# gtfs2gps() %>%
gtfs2gps::gps_as_sfpoints()
subset <- filter_by_shape_id(poa, "T2-1") %>%
filter_single_trip() %>%
gtfs2gps() %>%
gtfs2gps::gps_as_sfpoints()
subset
plot(subset["dist"],  main ="GTFS", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
subset <- poa %>%
filter_single_trip() %>%
gtfs2gps() %>%
gtfs2gps::gps_as_sfpoints()
plot(subset["dist"],  main ="GTFS", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
subset <- poa %>%
# filter_single_trip() %>%
gtfs2gps() %>%
gtfs2gps::gps_as_sfpoints()
plot(subset["dist"],  main ="GTFS", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
subset <- poa %>%
filter_single_trip() %>%
gtfs2gps() %>%
gtfs2gps::gps_as_sfpoints()
plot(subset["dist"],  main ="GTFS", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
subset
summary(subset)
unique(subset$trip_id)
unique(subset$trip_number)
unique(subset$route_type)
unique(subset$departure_time)
unique(subset$stop_id)
unique(subset$shape_id)
unique(subset$trip_id)
plot(subset["dist"],  main ="GTFS", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
plot(subset["trip_id"],  main ="GTFS", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
plot(subset["trip_id"],  main ="GTFS", axes = T)
plot(subset["trip_id"],  main ="GTFS", axes = T, key.pos = 1)
plot(subset["trip_id"],  main ="GTFS", axes = T, key.pos = 3)
plot(subset["trip_id"],  main ="GTFS", axes = T, key.pos = 2)
plot(subset["trip_id"],  main ="GTFS", axes = T, key.pos = 1)
plot(subset["trip_id"],  main ="GTFS", axes = T, key.pos = 1)
plot(subset["trip_id"],  main ="GTFS", axes = T, key.pos = 2)
plot(subset$geometry,  main ="GTFS", axes = T, key.pos = 2)
plot(subset$geometry,  main ="GTFS", axes = T, key.pos = 2, pch = 15)
plot(subset$geometry,  main ="GTFS", axes = T, key.pos = 2, pch = 13)
subset <- gps_as_sfpoints(gtfs2gps(filter_single_trip(filter_single_trip(poa))))
plot(subset["trip_id"],  main ="GTFS Porto Alegre", axes = T, key.pos = 2)
library(sf)
library(vein)
library(ggplot2)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.width=9, fig.height=3.5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
df <- readRDS("maryland.rds")
names(df)
plot(df["LIGHT_TRUCK_AADT"],  main ="Flujo leves Sao Paulo [veh/h]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
plot(df["BUS_AADT"],  main ="Flujo leves Sao Paulo [veh/h]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
plot(df["AADT_2018"],  main ="Flujo leves Sao Paulo [veh/h]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
plot(df["BUS_AADT"],  main ="Flujo leves Sao Paulo [veh/h]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
summary(Df)
summary(df)
plot(df["LIGHT_TRUCK_AADT"],  main ="Flujo leves Sao Paulo [veh/h]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.width=9, fig.height=3.5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
df <- rbind(readRDS("maryland_1_5000.rds"), readRDS("maryland_5000_end.rds"))
plot(df["LIGHT_TRUCK_AADT"],  main ="Flujo leves Sao Paulo [veh/h]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
names(df)
plot(df["CAR_AADT"],  main ="Leves [veh/h]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
df <- st_transform(rbind(readRDS("maryland_1_5000.rds"), readRDS("maryland_5000_end.rds")), 4326)
library(Sf)
library(sf)
df <- st_transform(rbind(readRDS("maryland_1_5000.rds"), readRDS("maryland_5000_end.rds")), 4326)
plot(df["CAR_AADT"],  main ="Leves [veh/h]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
df <- st_transform(rbind(readRDS("maryland_1_5000.rds"), readRDS("maryland_5000_end.rds")), 4326)
plot(df[df$CAR_AADT/365, "CAR_AADT"],  main ="Leves [veh/dia]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
df$CAR_AADT/365
plot(df["CAR_AADT"],  main ="Leves [veh/ano]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
st_write(df, "maryland.gpkg")
200000/365
names(df)
plot(df["AADT_2018"],  main ="Leves [veh/year]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
remotes::install_github("ibarraespinosa/trapos")
library(trapos)
?trapos
?trapos::points_to_lines()
a <- clean()
system.file("data-raw", package="trapos")
system.file("data-raw/dados/000000000000.csv", package="trapos")
system.file("data-raw/dados", package="trapos")
a <- clean(input_file = "https://github.com/ibarraespinosa/trapos/blob/master/data-raw/dados/000000000000.csv")
a
a <- fread("https://github.com/ibarraespinosa/trapos/blob/master/data-raw/dados/000000000000.csv")
library(data.table)
a <- fread("https://github.com/ibarraespinosa/trapos/blob/master/data-raw/dados/000000000000.csv")
a <- clean("https://raw.githubusercontent.com/ibarraespinosa/trapos/master/data-raw/dados/000000000000.csv")
a
plot(a["type"],  main ="GPS vehiculos Sao Paulo, Brazil [veh]", axes = T)
plot(a["soeed"],  main ="GPS vehiculos Sao Paulo, Brazil [veh]", axes = T)
plot(a["speed"],  main ="GPS vehiculos Sao Paulo, Brazil [veh]", axes = T)
a <- trapos::clean("https://raw.githubusercontent.com/ibarraespinosa/trapos/master/data-raw/dados/000000000000.csv")
plot(a["speed"],  main ="GPS vehiculos Sao Paulo, Brazil [veh]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
summary(a$speed)
plot(a["speed"],  main ="GPS vehiculos Sao Paulo, Brazil [veh]", axes = T)
---
title: "VEIN v0.9: an R package for bottom-up vehicular emissions inventories"
subtitle: "<img src='https://raw.githubusercontent.com/atmoschem/vein/master/man/figures/logo.png'>"
author:
- "Sergio Ibarra-Espinosa"
date: '`r Sys.Date()`'
output:
xaringan::moon_reader:
css: xaringan-themer.css
nature:
slideNumberFormat: "%current%"
highlightStyle: github
highlightLines: true
ratio: 16:9
countIncrementalSlides: true
---
```{r setup, include=FALSE}
devtools::install_github("hadley/emo")
library(vein)
data("net")
plot(net["ldv"],  main ="Flujo leves Sao Paulo, Brazil [veh/h]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
emo::ji("poop")
emo::ji("cl")
library(vein)
data("net")
plot(net["ldv"],  main ="Flujo leves Sao Paulo, Brazil [veh/h]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
plot(net["ps"],  main ="Velocidad de hora punta [km/h]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
names(net)
nr <- classInt::classIntervals(var = net$ffs, n = 100, style = "quantile")
nr <- classInt::classIntervals(var = unique(net$ffs), n = 100, style = "quantile")
nr <- classInt::classIntervals(var = unique(net$ffs), n = 50, style = "quantile")
nr <- classInt::classIntervals(var = unique(net$ffs), style = "quantile")
nr
nr <- classInt::classIntervals(var = unique(net$ffs), style = "pretty")
nr
nr <- classInt::classIntervals(var = unique(net$ffs), n = 10, style = "quantile")
nr <- classInt::classIntervals(var = unique(net$ffs), n = 10, style = "pretty")
nr <- classInt::classIntervals(var = net$ffs, n = 10, style = "pretty")
nr
nr$brks
plot(net["ffs"],  main ="Velocidad flujo libre [km/h]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T), breaks = nr$brks)
plot(net["ffs"],  main ="Velocidad flujo libre [km/h]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T), breaks = as.numeric(nr$brks))
nr <- classInt::classIntervals(var = net$ffs, n = 10, style = "quantile")
plot(net["ffs"],  main ="Velocidad flujo libre [km/h]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T), breaks = as.numeric(nr$brks))
plot(net["ps"],  main ="Velocidad de hora punta [km/h]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T),
breaks = as.numeric(nr$brks))
?age_ldv
PC_E25_1400 <- age_ldv(x = net$ldv, name = "PC_E25_1400")
plot(PC_E25_1400[1],  main ="Velocidad flujo libre [km/h]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T), breaks = as.numeric(nr$brks))
PC_E25_1400 <- age_ldv(x = net$ldv, name = "PC_E25_1400")
PC_E25_1400 <- age_ldv(x = net$ldv, name = "PC_E25_1400")
plot(PC_E25_1400[1],  main ="Velocidad flujo libre [km/h]", axes = T)
PC_E25_1400[1]
PC_E25_1400 <- age_ldv(x = net$ldv, name = "PC_E25_1400")
plot(PC_E25_1400,  main ="Velocidad flujo libre [km/h]")
colplot(PC_E25_1400,  main ="Velocidad flujo libre [km/h]")
PC_E25_1400 <- age_ldv(x = net$ldv, name = "PC_E25_1400")
plot(PC_E25_1400,  main ="Vehiculos por edad [veh/h]")
PC_E25_1400 <- age_ldv(x = net$ldv, name = "PC_E25_1400", net = net)
names(PC_E25_1400)
plot(PC_E25_1400["PC_E25_1400_1"],  main ="Vehiculos nuevos Sao Paulo [veh/h]")
PC_E25_1400 <- age_ldv(x = net$ldv, name = "PC_E25_1400", net = net)
PC_E25_1400 <- age_ldv(x = net$ldv, name = "PC_E25_1400", net = net)
plot(PC_E25_1400["PC_E25_1400_1"],  main ="Vehiculos nuevos Sao Paulo [veh/h]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
data("pc_profile")
pc_profile
colplot(pc_profile)
pc_week <- temp_fact(net$ldv+net$hdv, pc_profile)
dfspeed <- netspeed(pc_week, net$ps, net$ffs, net$capacity, net$lkm, alpha = 1.5,net = net)
dfspeed
plot(dfspeed["S0"],  main ="Vehiculos nuevos Sao Paulo [veh/h]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
plot(dfspeed["S1"],  main ="Velocidad 00:00 Sao Paulo [km/h]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
data("pc_profile")
names(pc_profile) <- c("Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado", "Domingo")
colplot(pc_profile)
?ef_china
ef_china(t = "Mini", f = "G", standard = "I", p = "CO")
ef_china(t = "Mini", f = "G", standard = "I", p = "CO", speed = 0:150)
ef_china(t = "Mini", f = "G", standard = "I", p = "CO", speed = Speed(0:150))
ef_china(t = "Mini", f = "G", standard = "I", p = "CO", speed = Speed(0:150))
ef_china(t = "Mini", f = "G", standard = rep("I", 151), p = "CO", speed = Speed(0:150))
ef_china(t = "Mini", f = "G", standard = rep("I", 151), p = "CO", speed = Speed(0:150))
rep("I", 151)
ef_china(t = "Mini", f = "G", standard = rep("I", 151), p = "CO")
ef_china(t = "Mini", f = "G", standard = "I", p = "CO")
ef1 <- ef_ldv_speed(v = "PC",t = "4S", cc = "<=1400", f = "G", eu = "PRE",
p = "CO", speed = 0:150)
ef1 <- ef_ldv_speed(v = "PC",t = "4S", cc = "<=1400", f = "G", eu = "PRE",
p = "CO", speed = Speed(0:150))
ef1 <- ef_ldv_speed(v = "PC",t = "4S", cc = "<=1400", f = "G", eu = "PRE",
p = "CO", speed = Speed(V))
V <- 0:150
ef1 <- ef_ldv_speed(v = "PC",t = "4S", cc = "<=1400", f = "G", eu = "PRE",
p = "CO", speed = Speed(V))
ef1
ef_china(t = "Mini", f = "G", standard = "I", p = "CO")
plot(ef1)
ef2 <- unlist(lapply(seq_along(V), function(i){ef_china(t = "Mini", f = "G", standard = "I", p = "CO", speed = Speed(i))}))
ef2
plot(ef2)
plot(ef1)
ef1 <- ef_ldv_speed(v = "PC",t = "4S", cc = "<=1400", f = "G", eu = "PRE",
p = "CO", speed = Speed(V))
ef2 <- unlist(lapply(seq_along(V), function(i){ef_china(t = "Mini", f = "G", standard = "PRE", p = "CO", speed = Speed(i))}))
ef2
colplot(data.frame(Europe = ef1, China = ef2))
euro <- c(rep("V", 5), rep("IV", 5), rep("III", 5), rep("II", 5),
rep("I", 5), rep("PRE", 15))
lef <- lapply(1:40, function(i) {
ef_ldv_speed(v = "PC", t = "4S", cc = "<=1400", f = "G",
eu = euro[i], p = "CO", show.equation = FALSE) })
E_CO <- emis(veh = PC_E25_1400, lkm = net$lkm, ef = lef, speed = dfspeed,
profile = pc_profile)
dfspeed
euro <- c(rep("V", 5), rep("IV", 5), rep("III", 5), rep("II", 5),
rep("I", 5), rep("PRE", 15))
lef <- lapply(1:40, function(i) {
ef_ldv_speed(v = "PC", t = "4S", cc = "<=1400", f = "G",
eu = euro[i], p = "CO", show.equation = FALSE) })
E_CO <- emis(veh = PC_E25_1400, lkm = net$lkm, ef = lef, speed = st_set_geometry(dfspeed, NULL),
profile = pc_profile)
plot(E_CO)
summary(E_CO)
E_CO
head(E_CO)
print(E_CO)
E_CO_DF <- emis_post(arra = E_CO,  veh = "PC", size = "<1400", fuel = "G",
pollutant = "CO", by = "veh")
head(E_CO_DF)
E_CO_STREETS <- emis_post(arra = E_CO, pollutant = "CO", by = "streets", net = net)
E_CO_STREETS
g <- make_grid(net, 1/102.47)
E_CO_g <- emis_grid(spobj = E_CO_STREETSnet, g = g, sr= 31983)
E_CO_g <- emis_grid(spobj = E_CO_STREETS, g = g, sr= 31983)
E_CO_STREETS
E_CO
units(E_CO)
units(E_CO_STREETS$V1)
g <- make_grid(net, 1/102.47)
E_CO_g <- emis_grid(spobj = E_CO_STREETS, g = g, sr= 31983)
na <- paste0("V", 1:168)
for(i in 1:168) E_CO_g[[na[i]]] <- E_CO_g[[na[i]]] * units::set_units(1, "1/h")
plot(E_CO_g["V9"], axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
g <- make_grid(net, 1/102.47)
E_CO_g <- emis_grid(spobj = E_CO_STREETS, g = g, sr= 31983)
na <- paste0("V", 1:168)
for(i in 1:168) E_CO_g[[na[i]]] <- E_CO_g[[na[i]]] * units::set_units(1, "1/h")
plot(E_CO_g["V9"], axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
g <- make_grid(net, 1/102.47/2)
E_CO_g <- emis_grid(spobj = E_CO_STREETS, g = g, sr= 31983)
na <- paste0("V", 1:168)
for(i in 1:168) E_CO_g[[na[i]]] <- E_CO_g[[na[i]]] * units::set_units(1, "1/h")
plot(E_CO_g["V9"], axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
g1000 <- make_grid(net, 1/102.47)
E_CO_g1000 <- emis_grid(spobj = E_CO_STREETS, g = g1000, sr= 31983)
E_CO_g1000
ggplot() + geom_sf(E_CO_g1000, aes(fill = V1))
library(ggplot2)
ggplot() + geom_sf(E_CO_g1000, aes(fill = V1))
names(E_CO_g1000)
ggplot() + geom_sf(data = E_CO_g1000, aes(fill = V1))
ggplot(E_CO_g1000) + geom_sf(aes(fill = V1))
ggplot(E_CO_g1000) + geom_sf(aes(fill = as.numeric(V1)))
ggplot(E_CO_g1000) + geom_sf(aes(fill = as.numeric(V1))) + xaringanthemer::theme_xaringan()
ggplot(E_CO_g1000) + geom_sf(aes(fill = as.numeric(V1))) + xaringanthemer::theme_xaringan_inverse()
ggplot(E_CO_g1000) + geom_sf(aes(fill = as.numeric(V1))) +
scale_fill_gradientn(colours = cpt())+
xaringanthemer::theme_xaringan_inverse()
ggplot(E_CO_g1000) + geom_sf(aes(fill = as.numeric(V1))) +
scale_fill_gradientn(colours = cptcity::cpt())+
xaringanthemer::theme_xaringan_inverse()
ggplot(E_CO_g1000) + geom_sf(aes(fill = as.numeric(V1))) +
scale_fill_gradientn(colours = cptcity::cpt())+
xaringanthemer::theme_xaringan_inverse() +
theme(legend.title = "none")
ggplot(E_CO_g1000) + geom_sf(aes(fill = as.numeric(V1))) +
scale_fill_gradientn(colours = cptcity::cpt())+
xaringanthemer::theme_xaringan_inverse() +
theme(legend.title = element_blank())
ggplot(E_CO_g1000) + geom_sf(aes(fill = as.numeric(V1))) +
scale_fill_gradientn("g/km2/h", colours = cptcity::cpt())+
xaringanthemer::theme_xaringan_inverse()
ggplot(E_CO_g500) + geom_sf(aes(fill = as.numeric(V1))) +
scale_fill_gradientn("g/km2/h", colours = cptcity::cpt())+
xaringanthemer::theme_xaringan_inverse()
E_CO_g500 <- emis_grid(spobj = E_CO_STREETS, g = g500, sr= 31983)
g500 <- make_grid(net, 1/102.47/2)
E_CO_g500 <- emis_grid(spobj = E_CO_STREETS, g = g500, sr= 31983)
na <- paste0("V", 1:168)
for(i in 1:168) E_CO_g500[[na[i]]] <- E_CO_g500[[na[i]]] * units::set_units(1, "1/h")
ggplot(E_CO_g500) + geom_sf(aes(fill = as.numeric(V1))) +
scale_fill_gradientn("g/km2/h", colours = cptcity::cpt())+
xaringanthemer::theme_xaringan_inverse()
ggplot(E_CO_g1000) + geom_sf(aes(fill = as.numeric(V1))) +
scale_fill_gradientn("g/km2/h", colours = cptcity::cpt())+
xaringanthemer::theme_xaringan()
ggplot(E_CO_g500) + geom_sf(aes(fill = as.numeric(V1))) +
scale_fill_gradientn("g/km2/h", colours = cptcity::cpt())+
xaringanthemer::theme_xaringan()
ggplot(E_CO_g500) + geom_sf(aes(fill = as.numeric(V1)), lty = 0) +
scale_fill_gradientn("g/km2/h", colours = cptcity::cpt())+
xaringanthemer::theme_xaringan()
ggplot(E_CO_g1000) + geom_sf(aes(fill = as.numeric(V1)), lty = 0) +
scale_fill_gradientn("g/km2/h", colours = cptcity::cpt())+
xaringanthemer::theme_xaringan()
emo::match("read")
emo::match("read")
emo::ji_match("read")
emo::ji_match_all("read")
emo::ji_match_all("book")
emo::ji_match_all("book")
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.width=9,
fig.height=3.5,
fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
library(vein)
library(sf)
data(net)
net
PC_E25_1400 <- age_ldv(x = net$ldv, name = "PC_E25_1400")
plot(PC_E25_1400,  main ="Vehiculos Gasolina por edad Sao Paulo [veh/h]")
pc_week <- temp_fact(net$ldv+net$hdv, pc_profile)
data("pc_profile")
names(pc_profile) <- c("Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado", "Domingo")
colplot(pc_profile, main = "Perfiles temporales")
pc_week <- temp_fact(net$ldv+net$hdv, pc_profile)
dfspeed <- netspeed(pc_week, net$ps, net$ffs, net$capacity, net$lkm, alpha = 1.5,net = net)
plot(dfspeed["S1"],  main ="Velocidad 00:00 Sao Paulo [km/h]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
euro <- c(rep("V", 5), rep("IV", 5), rep("III", 5), rep("II", 5),
rep("I", 5), rep("PRE", 15))
lef <- lapply(1:40, function(i) {
ef_ldv_speed(v = "PC", t = "4S", cc = "<=1400", f = "G",
eu = euro[i], p = "CO", show.equation = FALSE) })
E_CO <- emis(veh = PC_E25_1400, lkm = net$lkm, ef = lef, speed = st_set_geometry(dfspeed, NULL),
profile = pc_profile)
print(E_CO)
E_CO_DF <- emis_post(arra = E_CO,  veh = "PC", size = "<1400", fuel = "G",
pollutant = "CO", by = "veh")
head(E_CO_DF)
library(data.table)
as.data.table(E_CO_DF)[, sum(g), by = hour]
as.data.table(E_CO_DF)[, sum(g), by = hour][, barplot(V1)]
as.data.table(E_CO_DF)[, sum(g), by = hour][, barplot]
as.data.table(E_CO_DF)[, sum(g), by = hour] %>% barplot()
R.home()
R.version()
R.version
barplot(as.data.table(E_CO_DF)[, sum(g), by = hour])
as.data.table(E_CO_DF)[, sum(g), by = hour] -> x
barplot(t(x))
as.data.table(E_CO_DF)[, sum(g), by = hour][, plot(V1)]
as.data.table(E_CO_DF)[, sum(g), by = hour][, plot(V1, type = "b")]
as.data.table(E_CO_DF)[, sum(g), by = age][, plot(V1, type = "b")]
as.data.table(E_CO_DF)[, sum(g), by = age][, barplot(V1, type = "b")]
as.data.table(E_CO_DF)[, sum(g), by = age][, barplot(t(V1), type = "b")]
as.data.table(E_CO_DF)[, sum(g), by = age][, barplot(t(V1))]
as.data.table(E_CO_DF)[, sum(g), by = hour][, barplot(t(V1))]
as.data.table(E_CO_DF)[, sum(g), by = age][, barplot(t(V1), xlab = "horas")]
```{r, fig.width=5, fig.height=3}
E_CO_STREETS <- emis_post(arra = E_CO, pollutant = "CO", by = "streets", net = net)
plot(E_CO_STREETS["V8"],  main ="Emisiones CO 00:00 Sao Paulo [g/h]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
plot(E_CO_STREETS[c("V8", "V14")],  main ="Emisiones CO Sao Paulo [g/h]", axes = T, pal = cptcity::cpt(colorRampPalette = T, rev = T))
